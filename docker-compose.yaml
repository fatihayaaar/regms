version: "3.3"

services:
  config-server:
    container_name: config-server
    build:
      context: config-server
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: ${CONFIG_SERVER_PORT}

      EUREKA_SERVER_PORT: ${EUREKA_SERVER_PORT}
      EUREKA_SERVER_HOST: ${EUREKA_SERVER_HOST}
      EUREKA_SERVER_URL: "${HTTP_PROTOCOL}${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}"

      SPRING_BOOT_ADMIN_SERVER_PORT: ${SPRING_BOOT_ADMIN_SERVER_PORT}
      SPRING_BOOT_ADMIN_SERVER_URL: "${HTTP_PROTOCOL}${SPRING_BOOT_ADMIN_SERVER_HOST}:${SPRING_BOOT_ADMIN_SERVER_PORT}"

      GATEWAY_SERVER_PORT: ${GATEWAY_SERVER_PORT}
      USER_SERVICE_SERVER_PORT: ${USER_SERVICE_SERVER_PORT}
      PROFILE_SERVICE_SERVER_PORT: ${PROFILE_SERVICE_SERVER_PORT}
      POST_SERVICE_SERVER_PORT: ${POST_SERVICE_SERVER_PORT}
      FILE_SERVICE_SERVER_PORT: ${FILE_SERVICE_SERVER_PORT}
      FOLLOW_SERVICE_SERVER_PORT: ${FOLLOW_SERVICE_SERVER_PORT}
      FEED_SERVICE_SERVER_PORT: ${FEED_SERVICE_SERVER_PORT}

      ZIPKIN_SERVER_URL: "${HTTP_PROTOCOL}${ZIPKIN_SERVER_HOST}:${ZIPKIN_SERVER_PORT}"

      LDAP_SERVER_URL: ${LDAP_SERVER_URL}
      LDAP_BASE: ${LDAP_BASE}
      LDAP_USERNAME: ${LDAP_USERNAME}
      LDAP_PASSWORD: ${LDAP_PASSWORD}

      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI: ${OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI}
    volumes:
      - /tmp
    ports:
      - "${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}"
    healthcheck:
      test: "wget --spider -S ${CONFIG_SERVER_HOST}:${CONFIG_SERVER_PORT}/actuator/health/readiness || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
    restart: always
    networks:
      - regms-network

  eureka-server:
    container_name: eureka-server
    build:
      context: eureka-server
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: ${EUREKA_SERVER_PORT}
      PROFILE: ${EUREKA_SERVER_PROFILE}
      CONFIG_SERVER_URL: "${HTTP_PROTOCOL}${CONFIG_SERVER_HOST}:${CONFIG_SERVER_PORT}"
    volumes:
      - /tmp
    ports:
      - "${EUREKA_SERVER_PORT}:${EUREKA_SERVER_PORT}"
    healthcheck:
      test: "wget --spider -S ${CONFIG_SERVER_HOST}:${EUREKA_SERVER_PORT}/actuator/health/readiness || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
    restart: always
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - regms-network

  gateway-server:
    container_name: gateway-server
    build:
      context: gateway-server
      dockerfile: Dockerfile
    volumes:
      - /tmp
    ports:
      - "${GATEWAY_SERVER_PORT}:${GATEWAY_SERVER_PORT}"
    healthcheck:
      test: "wget --spider -S ${CONFIG_SERVER_HOST}:${GATEWAY_SERVER_PORT}/actuator/health/readiness || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
    restart: on-failure
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - regms-network

  user-service:
    container_name: user-service
    build:
      context: user-service
      dockerfile: Dockerfile
    environment:
      CONFIG_SERVER_URL: "${HTTP_PROTOCOL}${CONFIG_SERVER_HOST}:${CONFIG_SERVER_PORT}"
    volumes:
      - /tmp
    ports:
      - "${USER_SERVICE_SERVER_PORT}:${USER_SERVICE_SERVER_PORT}"
    healthcheck:
      test: "wget --spider -S ${CONFIG_SERVER_HOST}:${USER_SERVICE_SERVER_PORT}/actuator/health/readiness || exit 1"
      interval: 2s
      timeout: 3s
      retries: 15
    restart: on-failure
    depends_on:
      gateway-server:
        condition: service_healthy
    networks:
      - regms-network

networks:
  regms-network: