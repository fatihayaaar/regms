server:
  port: ${SERVER_PORT:8088}

eureka:
  client:
    instance:
      hostname: ${EUREKA_SERVER_HOST:localhost}
      preferIpAddress: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761}/eureka/

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:4200"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/**
          filters:
            - RewritePath=/user/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/userFallback
        - id: profile-service
          uri: lb://profile-service
          predicates:
            - Path=/profile/**
          filters:
            - RewritePath=/profile/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/profileFallback
        - id: post-service
          uri: lb://post-service/graphql
          predicates:
            - Path=/post/**
          filters:
            - RewritePath=/post/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/postFallback
        - id: follow-service
          uri: lb://follow-service
          predicates:
            - Path=/follow/**
          filters:
            - RewritePath=/follow/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/followFallback
        - id: like-service
          uri: lb://like-service
          predicates:
            - Path=/like/**
          filters:
            - RewritePath=/like/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/likeFallback
        - id: comment-service
          uri: lb://comment-service
          predicates:
            - Path=/comment/**
          filters:
            - RewritePath=/comment/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/commentFallback
        - id: openapi
          uri: http://localhost:${server.port}
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI:http://localhost:8080/auth/realms/regms}
    permit-all:
      urls: /public/**, /user/v1/public/**, /profile/v1/public/**, /post/v1/public/**, /follow/v1/public/**, /like/v1/public/**, /comment/v1/public/**

springdoc:
  swagger-ui:
    urls:
      - name: user-service
        url: /v3/api-docs/user
      - name: profile-service
        url: /v3/api-docs/profile

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "health"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true